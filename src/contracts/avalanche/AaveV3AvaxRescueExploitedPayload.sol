// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import {AaveV3Avalanche, AaveV3AvalancheAssets} from 'aave-address-book/AaveV3Avalanche.sol';
import {IProposalGenericExecutor} from 'aave-helpers/interfaces/IProposalGenericExecutor.sol';

/**
 * @title This proposal recovers exploited assets stuck on aave v3 avax to platypus finance multisig
 * @author BGD Labs
 * Snapshot: https://snapshot.org/#/aave.eth/proposal/0xb80935da09635bb06455d3db1a34aac2af287b621c10745b0ea7087d7fdfeccc
 * Discussion: https://governance.aave.com/t/arc-recover-exploited-assets-stuck-on-aave-v3-for-platypus-finance-on-avalanche/12000
 */
contract AaveV3AvaxRescueExploitedPayload is IProposalGenericExecutor {
  address public constant USDT_BRIDGED = 0xc7198437980c041c805A1EDcbA50c1Ce5db95118;
  address public constant USDC_BRIDGED = 0xA7D7079b0FEaD91F3e65f86E8915Cb59c1a4C664;
  address public constant BUSD = 0x9C9e5fD8bbc25984B178FdCE6117Defa39d2db39;
  address public constant USP = 0xdaCDe03d7Ab4D81fEDdc3a20fAA89aBAc9072CE2;
  address public constant PLATYPUS_MULTISIG = 0x068e297e8FF74115C9E1C4b5B83B700FdA5aFdEB;

  uint256 public constant USDT_AMOUNT = 96_810_192138;
  uint256 public constant USDT_BRIDGED_AMOUNT = 79_815_266923;
  uint256 public constant USDC_AMOUNT = 83_175_344156;
  uint256 public constant USDC_BRIDGED_AMOUNT = 69_756_919610;
  uint256 public constant DAI_AMOUNT = 26_540_197760386588285260;
  uint256 public constant BUSD_AMOUNT = 24_496_779552618215022840;
  uint256 public constant USP_AMOUNT = 19_047_391_056295368006201000;

  function execute() external {
    AaveV3Avalanche.POOL.rescueTokens(
      AaveV3AvalancheAssets.USDt_UNDERLYING,
      PLATYPUS_MULTISIG,
      USDT_AMOUNT
    );

    AaveV3Avalanche.POOL.rescueTokens(
      USDT_BRIDGED,
      PLATYPUS_MULTISIG,
      USDT_BRIDGED_AMOUNT
    );

    AaveV3Avalanche.POOL.rescueTokens(
      AaveV3AvalancheAssets.USDC_UNDERLYING,
      PLATYPUS_MULTISIG,
      USDC_AMOUNT
    );

    AaveV3Avalanche.POOL.rescueTokens(
      USDC_BRIDGED,
      PLATYPUS_MULTISIG,
      USDC_BRIDGED_AMOUNT
    );

    AaveV3Avalanche.POOL.rescueTokens(
      AaveV3AvalancheAssets.DAIe_UNDERLYING,
      PLATYPUS_MULTISIG,
      DAI_AMOUNT
    );

    AaveV3Avalanche.POOL.rescueTokens(
      BUSD,
      PLATYPUS_MULTISIG,
      BUSD_AMOUNT
    );

    AaveV3Avalanche.POOL.rescueTokens(
      USP,
      PLATYPUS_MULTISIG,
      USP_AMOUNT
    );
  }
}
